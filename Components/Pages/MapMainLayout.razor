@page "/"
@inject IJSRuntime jsRuntime
@* @implements IAsyncDisposable
 *@
<div class="page" style="height:100vh; width:100vw;">
    <div class="sidebar" style="pointer-events: none; z-index: 200;">
        <MenuBar />
    </div>

    <main style="height:100%; width:100%;">
        <LoadMap />
        <div id="key">
            <div>&emsp;</div>
            <NavLink href="" class="underline" @onclick="() => Run()"> Toggle Food Bank Visibility </NavLink>
            @*             <div>&emsp;</div>
            <NavLink href="" class="underline" @onclick="() => Run(true)"> Show Food Banks </NavLink> *@
        </div>
    </main>
</div>

@code {







    // Declare as nullable so the compiler knows it might be null initially.
    private IJSObjectReference? _jsModule;

    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (first)
        {
            // Import and store the module only once.
            _jsModule = await jsRuntime.InvokeAsync<IJSObjectReference>(
                "import", "./js/runMapThings.js");

            // Optionally, initialize something from the module.
            await _jsModule.InvokeVoidAsync("showFemaPoints");
        }
    }

    bool show = false;

    protected async Task Run()
    {

        show ^= true;
        // If the module hasn't been loaded yet, import it.
        if (_jsModule is null)
        {
            _jsModule = await jsRuntime.InvokeAsync<IJSObjectReference>(
                "import", "./js/runMapThings.js");
        }

        // Call the appropriate JS function.
        if (show)
        {
            await _jsModule.InvokeVoidAsync("showFemaPoints");
        }
        else
        {
            await _jsModule.InvokeVoidAsync("hideFemaPoints");
        }
    }
}
